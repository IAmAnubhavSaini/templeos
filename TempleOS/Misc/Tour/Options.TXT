$WW,1$$FG,5$$TX+CX,"Compiler Options"$$FG$

Use $LK,"OptOn","MN:OptOn"$() $LK,"OptOff","MN:OptOff"$().  You might need to do $FG,2$#exe {OptOn();}$FG$.

$LK,"OPTf_REPLACE_SYMS","MN:OPTf_REPLACE_SYMS"$ is to cause new declaritions to replace old, instead of overshadowing them in the hash sym table.

$LK,"OPTf_GLBLS_ON_DATA_HEAP","MN:OPTf_GLBLS_ON_DATA_HEAP"$ without this option, global vars are placed in the code heap which is limited to 2 Gig.  In $FG,2$AOT$FG$ modules, global vars take-up room in the $FG,2$.BIN$FG$ file, so you might want to use this option, instead.  You might wish to turn it on and off around specific vars.  A disadvantage of data heap global vars in $FG,2$AOT$FG$ modules is they can't be initialized.

$LK,"OPTf_EXTERNS_TO_IMPORTS","MN:OPTf_EXTERNS_TO_IMPORTS"$ and $LK,"OPTf_KEEP_PRIVATE","MN:OPTf_KEEP_PRIVATE"$ are strange options, you'll never need.  They're to allow the same header file for $FG,2$Kernel$FG$ to act as $FG,2$extern$FG$s when compiling itself and $FG,2$import$FG$s when compiled by $FG,2$AOT$FG$ modules.  They are used in $LK-A,"::/TempleOS/Kernel/AOT.HPP"$.

$LK,"OPTf_WARN_UNUSED_VAR","MN:OPTf_WARN_UNUSED_VAR"$	warning if unused var.  It is applied to functions.

$LK,"OPTf_WARN_PAREN","MN:OPTf_WARN_PAREN"$		warning if parenthesis are not needed.

$LK,"OPTf_WARN_DUP_TYPES","MN:OPTf_WARN_DUP_TYPES"$	warning if dup local var type statements.

$LK,"OPTf_NO_REG_VAR","MN:OPTf_NO_REG_VAR"$ forces all function local vars to the stk not registers.  Applied to functions.

$LK,"OPTf_NO_BUILTIN_CONST","MN:OPTf_NO_BUILTIN_CONST"$ Disable 10-byte float consts for ã, log2_10, log10_2, loge_2.  Applied to functions.
